// tslint:disable
/**
 * Tapis Files API
 * My API
 *
 * The version of the OpenAPI document: 0.0
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import { BaseAPI, HttpQuery, throwIfNullOrUndefined, encodeURI } from '../runtime';
import {
    FilePermissionResponse,
} from '../models';

export interface PermissionsSystemIdPathDeleteRequest {
    systemId: string;
    path: string;
    username: string;
}

export interface PermissionsSystemIdPathGetRequest {
    systemId: string;
    path: string;
}

export interface PermissionsSystemIdPathPostRequest {
    systemId: string;
    path: string;
}

/**
 * no description
 */
export class PermissionsApi extends BaseAPI {

    /**
     * Remove user permissions to a file/folder. QUESTION - who should be able to delete permissions? Only the owner? 
     * Remove permissions on an object for a user. 
     */
    permissionsSystemIdPathDelete = ({ systemId, path, username }: PermissionsSystemIdPathDeleteRequest): Observable<FilePermissionResponse> => {
        throwIfNullOrUndefined(systemId, 'permissionsSystemIdPathDelete');
        throwIfNullOrUndefined(path, 'permissionsSystemIdPathDelete');
        throwIfNullOrUndefined(username, 'permissionsSystemIdPathDelete');

        const query: HttpQuery = { // required parameters are used directly since they are already checked by throwIfNullOrUndefined
            'username': username,
        };

        return this.request<FilePermissionResponse>({
            path: '/v3/files/permissions/{systemId}/{path}'.replace('{systemId}', encodeURI(systemId)).replace('{path}', encodeURI(path)),
            method: 'DELETE',
            query,
        });
    };

    /**
     * Returns a list of roles/users that can access the file QUESTION: Who should be able to see access this? Only the owner of the system? 
     * List permissions on an file/folder
     */
    permissionsSystemIdPathGet = ({ systemId, path }: PermissionsSystemIdPathGetRequest): Observable<Array<FilePermissionResponse>> => {
        throwIfNullOrUndefined(systemId, 'permissionsSystemIdPathGet');
        throwIfNullOrUndefined(path, 'permissionsSystemIdPathGet');

        return this.request<Array<FilePermissionResponse>>({
            path: '/v3/files/permissions/{systemId}/{path}'.replace('{systemId}', encodeURI(systemId)).replace('{path}', encodeURI(path)),
            method: 'GET',
        });
    };

    /**
     * Add a user to a file/folder. QUESTION - who should be able to add permissions? Only the owner? 
     * Add permissions on an object. 
     */
    permissionsSystemIdPathPost = ({ systemId, path }: PermissionsSystemIdPathPostRequest): Observable<FilePermissionResponse> => {
        throwIfNullOrUndefined(systemId, 'permissionsSystemIdPathPost');
        throwIfNullOrUndefined(path, 'permissionsSystemIdPathPost');

        return this.request<FilePermissionResponse>({
            path: '/v3/files/permissions/{systemId}/{path}'.replace('{systemId}', encodeURI(systemId)).replace('{path}', encodeURI(path)),
            method: 'POST',
        });
    };

}
